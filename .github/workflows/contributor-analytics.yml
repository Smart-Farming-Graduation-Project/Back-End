name: Contributor Analytics with Visualizations

on:
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Mondays at midnight
  workflow_dispatch:       # Allows manual triggering

jobs:
  gather_contributor_data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Python libraries
        run: |
          python -m pip install requests pandas matplotlib

      - name: Fetch contributor data
        id: fetch_data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${{ steps.fetch_data.outputs.python_script }}" | python
        - import: json
      - import: requests
      - import: os
      - from: datetime
        import: datetime

repo: ${{ github.repository }}
token: ${{ secrets.GITHUB_TOKEN }}
headers:
  Authorization: ${{ secrets.GITHUB_TOKEN }}

def fetch_data(url):
    response = requests.get(url, headers=headers)
    response.raise_for_status()
    return response.json()

commits: ${{ steps.fetch_data.outputs.commits }}
issues: ${{ steps.fetch_data.outputs.issues }}
pulls: ${{ steps.fetch_data.outputs.pulls }}

contributor_data: {}
def add_contribution(user, type):
    if user not in contributor_data:
        contributor_data[user] = {}
    if type not in contributor_data[user]:
        contributor_data[user][type] = 0
    contributor_data[user][type] += 1

for commit in commits:
    if 'author' in commit:
        add_contribution(commit['author']['login'], 'commits')
for issue in issues:
    add_contribution(issue['user']['login'], 'issues')
for pull in pulls:
    add_contribution(pull['user']['login'], 'pull_requests')

- name: Load contributor analytics
  run: |
    all_data=$(cat contributor_analytics.json)
    echo "::set-output name=all_data::$all_data"

all_data = []
try:
    all_data = ${{ steps.fetch_data.outputs.all_data }}
except:
    pass

all_data.append({
    'timestamp': ${{ steps.fetch_data.outputs.timestamp }},
    'data': ${{ steps.fetch_data.outputs.contributor_data }}
})

- name: Save contributor analytics
  run: |
    echo '${{ toJson(steps.fetch_data.outputs.all_data) }}' > contributor_analytics.json

EOF

      - name: Generate visualizations
        run: |
- name: Load contributor analytics
  run: |
    all_data=$(cat contributor_analytics.json)
    echo "::set-output name=all_data::$all_data"
import pandas as pd
import matplotlib.pyplot as plt
from datetime import datetime

with open('contributor_analytics.json', 'r') as f):
    all_data = json.load(f)

records = []
for entry in all_data:
    for user, contributions in entry['data'].items():
        record = {
df: ${{ steps.generate_visualizations.outputs.df }}ntry['timestamp'],
            'user': user,
            'commits': contributions['commits'],
total_contributions: ${{ steps.generate_visualizations.outputs.total_contributions }}
            'pull_requests': contributions['pull_requests']
        }
        records.append(record)

df = pd.DataFrame(records)
df['timestamp'] = pd.to_datetime(df['timestamp'])
user_contributions: ${{ steps.generate_visualizations.outputs.user_contributions }}
total_contributions = df.groupby('timestamp')[['commits', 'issues', 'pull_requests']].sum()
total_contributions.plot(kind='line', figsize=(10, 5))
plt.title('Total Contributions Over Time')
plt.xlabel('Date')
plt.ylabel('Number of Contributions')
plt.savefig('total_contributions.png')

      - name: Commit and Push Updated Data and Charts
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add contributor_analytics.json total_contributions.png contributions_by_user.png
          git commit -m "Update contributor analytics and charts"
          git pushissues', 'pull_requests']].sum()
user_contributions.plot(kind='bar', stacked=True, figsize=(10, 5))
plt.title('Contributions by User')
plt.xlabel('User')
plt.ylabel('Number of Contributions')
plt.savefig('contributions_by_user.png')
EOF

      - name: Commit and Push Updated Data and Charts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add contributor_analytics.json total_contributions.png contributions_by_user.png
          git commit -m "Update contributor analytics and charts"
          git push
